{"version":3,"sources":["nav.js","home.js","project.card.js","experience.js","about.js","serviceWorker.js","index.js","projects.js"],"names":["NavMain","props","StylesProvider","injectFirst","BottomNavigation","value","showLabels","className","BottomNavigationAction","label","Home","Grid","container","spacing","justify","alignItems","item","xs","sm","Grow","in","timeout","Typography","style","color","marginTop","variant","align","direction","fontSize","htmlColor","ProjectCard","Card","raised","backgroundColor","CardHeader","avatar","title","CardContent","content","Experience","Stepper","orientation","Step","active","StepLabel","StepIconComponent","WorkIcon","StepContent","completed","LangCard","Chip","marginRight","marginBottom","LibCard","CourseCard","Info","Boolean","window","location","hostname","match","theme","createMuiTheme","responsiveFontSizes","ReactDOM","render","ThemeProvider","Divider","light","lg","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5177706c.chunk.js","sourcesContent":["import React from 'react';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport { StylesProvider } from \"@material-ui/styles\";\nimport './App.css'\n\n\nfunction NavMain(props) {\n  return (\n    <StylesProvider injectFirst>\n    <BottomNavigation value=\"Test\" showLabels className=\"nav\">\n      <BottomNavigationAction label=\"Home\" className='navitem'/>\n      <BottomNavigationAction label=\"About\" className='navitem'/>\n      <BottomNavigationAction label=\"Skills\" className='navitem'/>\n      <BottomNavigationAction label=\"Projects\" className='navitem'/>\n      <BottomNavigationAction label=\"Contact\" className='navitem'/>\n    </BottomNavigation>\n    </StylesProvider>\n  )\n}\n\nexport default NavMain;\n","import React from 'react';\nimport Grow from '@material-ui/core/Grow';\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid';\nimport NavMain from './nav.js'\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport RedditIcon from '@material-ui/icons/Reddit';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport CodeIcon from '@material-ui/icons/Code';\n\n\nfunction Home(props) {\n  return (\n      <Grid container spacing={4} justify=\"center\" alignItems=\"center\">\n        <Grid item xs={12} >\n          <NavMain/>\n        </Grid>\n        <Grid item xs={8} sm={10}>\n          <Grow in={true} timeout={1000}>\n            <Typography style={{color:'white', marginTop:100}} variant=\"h1\" align=\"center\">Hello, I'm Athul P.</Typography>\n          </Grow>\n        </Grid>\n        <Grid item xs={10}>\n            <Typography style={{color:'white', marginTop:50}}  variant=\"h3\" align=\"center\">Full Stack Developer | Linux | Machine Learning</Typography>\n        </Grid>\n        <Grid item xs={12} style={{marginTop:50}}>\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={1}>\n            <Grid item xs={2} sm={1}>\n              <GitHubIcon fontSize=\"large\" htmlColor=\"white\"/>\n            </Grid>\n            <Grid item xs={2} sm={1}>\n              <LinkedInIcon fontSize=\"large\" htmlColor=\"white\"/>\n            </Grid>\n            <Grid item xs={2} sm={1}>\n              <TwitterIcon fontSize=\"large\" htmlColor=\"white\"/>\n            </Grid>\n            <Grid item xs={2} sm={1}>\n              <RedditIcon fontSize=\"large\" htmlColor=\"white\"/>\n            </Grid>\n          </Grid>\n        </Grid>\n        <ExpandMoreIcon htmlColor=\"white\" fontSize=\"large\" className=\"down\"/>\n      </Grid>\n  )\n}\nexport default Home;\n//100:8:20\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Avatar from '@material-ui/core/Avatar';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nfunction ProjectCard(props) {\n    return (\n        <Card raised={true} style={{backgroundColor:\"#00000000\", color:\"white\"}}>\n        <CardHeader\n        avatar={\n            <GitHubIcon htmlColor=\"white\"/>\n        }\n        title= {props.title}/>\n            <CardContent>\n                <Typography variant=\"h5\"></Typography>\n                <Typography variant=\"body2\">{props.content}</Typography>\n            </CardContent>\n        </Card>\n\n    )\n} \n\nexport default ProjectCard;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Typography from '@material-ui/core/Typography';\nimport WorkIcon from '@material-ui/icons/Work';\nimport Paper from '@material-ui/core/Paper'\nimport CardContent from '@material-ui/core/CardContent';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\n\n\n\nexport default function Experience() {\n    return (\n        <Card raised={true} style={{backgroundColor:\"#00000000\", color:\"white\"}}>\n        <CardHeader\n            title=\"Experience\"/>\n        <CardContent>\n            <Stepper orientation=\"vertical\" style={{backgroundColor:\"#00000000\", color:\"white\"}}>\n            <Step active={true}>\n                <StepLabel StepIconComponent={WorkIcon}><Typography style={{color:\"white\"}}>Digital Library Student Administrator</Typography></StepLabel>\n                <StepContent>\n                    <Typography>National Institute of Technology Calicut</Typography>\n                    <Typography variant=\"caption\">August 2019 - Present</Typography>            </StepContent>\n            </Step>\n            <Step active={true} completed={true}>\n                <StepLabel style={{color:\"white\"}}><Typography style={{color:\"white\"}}>Digital Library Intern</Typography></StepLabel>\n                <StepContent>\n                    <Typography>National Institute of Technology Calicut</Typography>\n                    <Typography variant=\"caption\">June - July 2019</Typography>\n                </StepContent>\n            </Step>\n            </Stepper>\n        </CardContent>\n    </Card>\n    )\n}","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport CodeIcon from '@material-ui/icons/Code';\nimport Chip from '@material-ui/core/Chip';\nimport Grid from '@material-ui/core/Grid';\nimport SchoolIcon from '@material-ui/icons/School';\nimport ComputerIcon from '@material-ui/icons/Computer';\nimport Typography from '@material-ui/core/Typography';\nimport PersonIcon from '@material-ui/icons/Person';\nimport Experience from './experience';\n\nconst about = {\n    \"Languages\" : [\"Python\", \"C++\", \"C\", \"Javascript\"],\n    \"Technologies\" : [\"ReactJS\", \"NodeJS\", \"TensorFlow\", \"MongoDB\"],\n    \"Courses\" : [\"Data Structures\", \"Artificial Intelligence\", \"Compiler Laboratory\", \"Microprocessor and Microcontrollers\"]\n}\n\nfunction LangCard(props) {\n    return (\n        <Card raised={true} style={{backgroundColor:\"#00000000\", color:\"white\"}}>\n            <CardHeader\n                avatar={\n                    <CodeIcon htmlColor=\"white\" fontSize=\"large\"/>\n                }\n                title=\"Programming Lanuguages\"/>\n            <CardContent>\n                <Chip label=\"Python\" style={{backgroundColor:\"yellow\", color:\"black\", marginRight:4, marginBottom:8}}></Chip>\n                <Chip label=\"C++\" style={{backgroundColor:\"blue\", color:\"black\", marginRight:4, marginBottom:8}}></Chip>\n                <Chip label=\"C\" style={{backgroundColor:\"red\", color:\"black\", marginRight:4, marginBottom:8}}></Chip>\n                <Chip label=\"JavaScript\" style={{backgroundColor:\"orange\", color:\"black\", marginRight:4, marginBottom:8}}></Chip>\n            </CardContent>\n        </Card>\n    )\n}\n\nfunction LibCard(){\n    return (\n        <Card raised={true} style={{backgroundColor:\"#00000000\", color:\"white\"}}>\n            <CardHeader\n                avatar={\n                    <ComputerIcon htmlColor=\"white\" fontSize=\"large\"/>\n                }\n                title=\"Technologies\"/>\n            <CardContent>\n                <Chip label=\"ReactJS\" style={{backgroundColor:\"yellow\", color:\"black\", marginRight:4, marginBottom:8}}></Chip>\n                <Chip label=\"NodeJS\"  style={{backgroundColor:\"red\", color:\"black\", marginRight:4, marginBottom:8}}></Chip>\n                <Chip label=\"TensorFlow\" style={{backgroundColor:\"orange\", color:\"black\", marginRight:4, marginBottom:8}}></Chip>\n                <Chip label=\"MongoDB\"  style={{backgroundColor:\"green\", color:\"black\", marginRight:4, marginBottom:8}}></Chip>\n            </CardContent>\n        </Card>\n    )\n}\n\nfunction CourseCard(){\n    return (\n        <Card  raised={true}style={{backgroundColor:\"#00000000\", color:\"white\"}}>\n            <CardHeader\n                avatar={\n                    <SchoolIcon htmlColor=\"white\" fontSize=\"large\"/>\n                }\n                title=\"Major Courses\"/>\n            <CardContent>\n                <Chip label=\"Data Structures\" style={{backgroundColor:\"yellow\", color:\"black\", marginRight:4, marginBottom:8}}></Chip>\n                <Chip label=\"Artificial Intelligence\"  style={{backgroundColor:\"red\", color:\"black\", marginRight:4, marginBottom:8}}></Chip>\n                <Chip label=\"Compiler Laboratory\" style={{backgroundColor:\"orange\", color:\"black\", marginRight:4, marginBottom:8}}></Chip>\n                <Chip label=\"Microprocessor and Microcontrollers\"  style={{backgroundColor:\"green\", color:\"black\", marginRight:4, marginBottom:8}}></Chip>\n            </CardContent>\n        </Card>\n    )\n}\n\nfunction Info(){\n    return (\n        <Card  raised={true} style={{backgroundColor:\"#00000000\", color:\"white\"}}>\n            <CardHeader\n                avatar={\n                    <PersonIcon htmlColor=\"white\" fontSize=\"large\"/>\n                }\n                title=\"A little about me\"/>\n            <CardContent>\n                <Typography variant=\"body2\" align='center'>I am currently Third year student pursuing B Tech degree from National Institute of Technology Calicut. I am deeply passionated all about computers.</Typography>\n            </CardContent>\n        </Card>\n    )\n}\n\nexport default function About() {\n    return (\n        <div>\n            <Grid container spacing={10} justify='space-evenly' alignItems=\"center\">\n            <Grid item xs={12}>\n                <Typography variant=\"h3\" align=\"center\" style={{color:'white', marginBottom:20, marginTop:20}}>About Me</Typography>\n            </Grid>\n            <Grid item>\n            <Grid container spacing={10} justify='space-evenly' alignItems=\"center\">\n                <Grid item xs={10} sm={6} lg={6}>\n                    <Info/>\n                </Grid>\n                <Grid item xs={10} sm={6} lg={6}>\n                    <Experience/>\n                </Grid>\n            </Grid>\n            </Grid>\n            <Grid item>\n            <Grid container spacing={4} justify='space-evenly' alignItems=\"center\">\n                <Grid item xs={10} sm={4} lg={4}>\n                    <LangCard/>\n                </Grid>\n                <Grid item xs={10} sm={4} lg={4}>\n                    <LibCard/>\n                </Grid>\n                <Grid item xs={10} sm={4} lg={4}>\n                    <CourseCard/>\n                </Grid> \n            </Grid>\n            </Grid>\n            </Grid>\n        </div>\n    )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Home from './home';\nimport Projects from './projects';\nimport About from './about';\nimport * as serviceWorker from './serviceWorker';\nimport './App.css'\nimport Bounce from 'react-reveal/Zoom'\nimport { createMuiTheme, responsiveFontSizes, ThemeProvider } from '@material-ui/core/styles';\nimport StylesProvider from '@material-ui/styles/StylesProvider';\nimport Divider from '@material-ui/core/Divider';\n\n\nlet theme = createMuiTheme();\ntheme = responsiveFontSizes(theme);\n\nReactDOM.render(\n    <StylesProvider injectFirst>\n    <ThemeProvider theme={theme}>\n    <Bounce>\n        <div className=\"page\"><Home/></div>\n    </Bounce>\n    <hr style={{marginTop:20}}></hr>\n    <Divider variant=\"middle\" light={true}/>\n    <div className=\"page\">\n        <About/>\n    </div>\n    <hr></hr>\n    <Divider variant=\"middle\"/>\n    <div className=\"page\">\n        <Projects/>\n    </div>\n    <Divider variant=\"middle\"/>\n    </ThemeProvider>\n    </StylesProvider>, \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","import React from 'react';\nimport ProjectCard from './project.card'\nimport Grid from '@material-ui/core/Grid';\nimport Grow from '@material-ui/core/Grow';\nimport Typography from '@material-ui/core/Typography'\n\n\n\nexport default function Projects(props) {\n    return (\n        <div>\n        <Grid container spacing={10} justify='space-evenly' alignItems=\"center\">\n            <Grid item xs={12}>\n                <Typography variant=\"h3\" align=\"center\" style={{color:'white', marginBottom:20, marginTop:20}}>Projects</Typography>\n            </Grid>\n            <Grid item xs={12}>\n                <Grid container direction=\"row\" spacing={4} justify='space-evenly' alignItems=\"center\">\n                    <Grid item xs={10} sm={4} lg={3}>\n                        <ProjectCard title=\"Face Authenication\" content=\"Basic face recognition system\"/>\n                    </Grid>\n                    <Grid item xs={10} sm={4} lg={3}>\n                        <ProjectCard title=\"Chrome-dino-automation\" content=\"A GA approach to play the chrome://dino game.\"/>\n                    </Grid>\n                    <Grid item xs={10} sm={4} lg={3}>\n                        <ProjectCard title=\"Attendance Manager\" content=\"A Web site to keep track of your attendance\"/>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item xs={12}>\n                <Grid container direction=\"row\" spacing={4} justify='space-evenly' alignItems=\"center\">\n                    <Grid item xs={10} sm={4} lg={3}>\n                        <ProjectCard title=\"Elastic Collision Simulator\" content=\"This program simulates N-body 2D elastic collision.\"/>\n                    </Grid>\n                    <Grid item xs={10} sm={4} lg={3}>\n                        <ProjectCard title=\"GDSyncer\" content=\"Keep a folder in sync with Google Drive\"/>\n                    </Grid>\n                    <Grid item xs={10} sm={4} lg={3}>\n                        <ProjectCard title=\"Sudoku Solver\" content=\"Feed in a image of a sudoku and get it solved!\"/>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n        </div>\n    )\n}"],"sourceRoot":""}